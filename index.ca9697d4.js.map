{"mappings":"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","sources":["node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js","src/js/mobile-menu.js","src/js/modal.js","src/js/scroll-to-top-button.js"],"sourcesContent":["function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// Older browsers don't support event options, feature detect it.\n\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\nvar hasPassiveEvents = false;\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\n\n\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting = void 0;\nvar previousBodyPosition = void 0;\nvar previousBodyPaddingRight = void 0;\n\n// returns true if `el` should be allowed to receive touchmove events.\nvar allowTouchMove = function allowTouchMove(el) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nvar preventDefault = function preventDefault(rawEvent) {\n  var e = rawEvent || window.event;\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true;\n  }\n\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true;\n\n  if (e.preventDefault) e.preventDefault();\n\n  return false;\n};\n\nvar setOverflowHidden = function setOverflowHidden(options) {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n    var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n    if (_reserveScrollBarGap && scrollBarGap > 0) {\n      var computedBodyPaddingRight = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'), 10);\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = computedBodyPaddingRight + scrollBarGap + 'px';\n    }\n  }\n\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nvar restoreOverflowSetting = function restoreOverflowSetting() {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight;\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined;\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting;\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined;\n  }\n};\n\nvar setPositionFixed = function setPositionFixed() {\n  return window.requestAnimationFrame(function () {\n    // If previousBodyPosition is already set, don't set it again.\n    if (previousBodyPosition === undefined) {\n      previousBodyPosition = {\n        position: document.body.style.position,\n        top: document.body.style.top,\n        left: document.body.style.left\n      };\n\n      // Update the dom inside an animation frame \n      var _window = window,\n          scrollY = _window.scrollY,\n          scrollX = _window.scrollX,\n          innerHeight = _window.innerHeight;\n\n      document.body.style.position = 'fixed';\n      document.body.style.top = -scrollY;\n      document.body.style.left = -scrollX;\n\n      setTimeout(function () {\n        return window.requestAnimationFrame(function () {\n          // Attempt to check if the bottom bar appeared due to the position change\n          var bottomBarHeight = innerHeight - window.innerHeight;\n          if (bottomBarHeight && scrollY >= innerHeight) {\n            // Move the content further up so that the bottom bar doesn't hide it\n            document.body.style.top = -(scrollY + bottomBarHeight);\n          }\n        });\n      }, 300);\n    }\n  });\n};\n\nvar restorePositionSetting = function restorePositionSetting() {\n  if (previousBodyPosition !== undefined) {\n    // Convert the position from \"px\" to Int\n    var y = -parseInt(document.body.style.top, 10);\n    var x = -parseInt(document.body.style.left, 10);\n\n    // Restore styles\n    document.body.style.position = previousBodyPosition.position;\n    document.body.style.top = previousBodyPosition.top;\n    document.body.style.left = previousBodyPosition.left;\n\n    // Restore scroll\n    window.scrollTo(x, y);\n\n    previousBodyPosition = undefined;\n  }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nvar isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n};\n\nvar handleScroll = function handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nexport var disableBodyScroll = function disableBodyScroll(targetElement, options) {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n    return;\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(function (lock) {\n    return lock.targetElement === targetElement;\n  })) {\n    return;\n  }\n\n  var lock = {\n    targetElement: targetElement,\n    options: options || {}\n  };\n\n  locks = [].concat(_toConsumableArray(locks), [lock]);\n\n  if (isIosDevice) {\n    setPositionFixed();\n  } else {\n    setOverflowHidden(options);\n  }\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n    targetElement.ontouchmove = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement);\n      }\n    };\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = true;\n    }\n  }\n};\n\nexport var clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n\n    // Reset initial clientY.\n    initialClientY = -1;\n  }\n\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n\n  locks = [];\n};\n\nexport var enableBodyScroll = function enableBodyScroll(targetElement) {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n    return;\n  }\n\n  locks = locks.filter(function (lock) {\n    return lock.targetElement !== targetElement;\n  });\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n  }\n\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n};\n\n","import {\n  enableBodyScroll,\n  disableBodyScroll,\n} from 'body-scroll-lock';\n\nconst targetElement = document.querySelector('.js-menu-container');\n\n(() => {\n  // Mobile menu container\n  const mobileMenu = document.querySelector('.js-menu-container');\n  // Open mobile menu button (burger)\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  // Close mobile menu button (cross)\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n  // Menu link HOME with mobile menu close function\n  const menuLinkHome = document.querySelector('.js-menu-link-home');\n  // Menu link HOW IT'S MADE with mobile menu close function\n  const menuLinkAbout = document.querySelector('.js-menu-link-about');\n  // Menu link PRODUCTS with mobile menu close function\n  const menuLinkProducts = document.querySelector('.js-menu-link-products');\n  // Menu link CONTACTS with mobile menu close function\n  const menuLinkContacts = document.querySelector('.js-menu-link-contacts');\n  // Menu BUY NOW BUTTON\n  const menuBuyNowBtn = document.querySelector('.js-menu-buy-now-btn');\n\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n\n    if (!isMenuOpen) {\n      disableBodyScroll(targetElement);\n    } else {\n      enableBodyScroll(targetElement);\n    }\n  };\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n  menuLinkHome.addEventListener('click', toggleMenu);\n  menuLinkAbout.addEventListener('click', toggleMenu);\n  menuLinkProducts.addEventListener('click', toggleMenu);\n  menuLinkContacts.addEventListener('click', toggleMenu);\n\n  menuBuyNowBtn.addEventListener('click', toggleMenu);\n\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    enableBodyScroll(document.body);\n  });\n})();\n","// BodyScrollLock\nimport { enableBodyScroll, disableBodyScroll } from 'body-scroll-lock';\n\n// Script for modals - https://medium.com/@dan.postnov/%D0%BC%D0%BE%D0%B4%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B5-%D0%BE%D0%BA%D0%BD%D0%B0-%D0%BD%D0%B0-javascript-30-%D1%81%D1%82%D1%80%D0%BE%D0%BA-%D0%BA%D0%BE%D0%B4%D0%B0-dbbb599649f3\n// Closest is replaced by data-modal identification\n\n// DOMContentLoaded - when when the HTML document has been completely parsed,\n//  and all deferred scripts (<script defer src=\"…\"> and <script type=\"module\">)\n//  have downloaded and executed\ndocument.addEventListener('DOMContentLoaded', function () {\n  /* Write an array of button elements and a background to variables */\n  const modalButtons = document.querySelectorAll('.js-open-modal');\n  const overlay = document.querySelector('.js-overlay-modal');\n  const closeButtons = document.querySelectorAll('.js-modal-close');\n\n  /* Loop through an array of buttons */\n  modalButtons.forEach(function (item) {\n    /* Assign a click handler to each button */\n    item.addEventListener('click', function (e) {\n      e.preventDefault();\n      /* Each time the button is clicked, we will fetch the contents of the data-modal attribute and\n      look for a modal window with the same attribute */\n      const modalId = this.getAttribute('data-modal');\n      const modalElem = document.querySelector(\n        '.modal[data-modal=\"' + modalId + '\"]'\n      );\n\n      /* After we have found the desired modal window, add classes\n      for overlay and modal window to show them */\n      modalElem.classList.add('active');\n      overlay.classList.add('active');\n\n      // disables body scroll when modal window is open\n      disableBodyScroll(modalElem);\n    }); // end click\n  }); // end foreach\n\n  // Close modal windows\n\n  closeButtons.forEach(function (item) {\n    item.addEventListener('click', function (e) {\n      // const parentModal = this.closest('.modal');\n\n      const modalIdClose = this.getAttribute('data-modal');\n      const parentModal = document.querySelector(\n        '.modal[data-modal=\"' + modalIdClose + '\"]'\n      );\n\n      parentModal.classList.remove('active');\n      overlay.classList.remove('active');\n\n      // enables body scroll when modal window is closed\n      enableBodyScroll(parentModal);\n      // Stops video from youtube when modal is closed\n\n      if (modalIdClose === '2') {\n        const videoEmbed = document.querySelector('.modal-about__video');\n        videoEmbed.setAttribute('src', '');\n      }\n    });\n  }); // end foreach\n\n  document.body.addEventListener(\n    'keydown',\n    function (e) {\n      const key = e.code;\n\n      if (key == 27) {\n        document.querySelector('.modal.active').classList.remove('active');\n        document.querySelector('.overlay').classList.remove('active');\n      }\n    },\n    false\n  );\n\n  overlay.addEventListener('click', function () {\n    document.querySelector('.modal.active').classList.remove('active');\n    this.classList.remove('active');\n  });\n});\n// end ready\n","const scrollTop = function () {\n  const scrollBtn = document.querySelector('#scroll-btn');\n  // hide/show button based on scroll distance\n  const scrollBtnDisplay = function () {\n    window.scrollY > window.innerHeight\n      ? scrollBtn.classList.add('show')\n      : scrollBtn.classList.remove('show');\n  };\n  window.addEventListener('scroll', scrollBtnDisplay);\n  // scroll to top when button clicked\n  const scrollWindow = function () {\n    if (window.scrollY != 0) {\n      setTimeout(function () {\n        window.scrollTo(0, window.scrollY - 50);\n        scrollWindow();\n      }, 10);\n    }\n  };\n  scrollBtn.addEventListener('click', scrollWindow);\n};\nscrollTop();\n"],"names":["$bec4a57ff909e76e$var$hasPassiveEvents","window","$bec4a57ff909e76e$var$passiveTestOptions","passive","addEventListener","removeEventListener","mobileMenu","openMenuBtn","closeMenuBtn","menuLinkHome","menuLinkAbout","menuLinkProducts","menuLinkContacts","menuBuyNowBtn","toggleMenu","$bec4a57ff909e76e$var$isIosDevice","navigator","platform","test","maxTouchPoints","$bec4a57ff909e76e$var$locks","$bec4a57ff909e76e$var$documentListenerAdded","$bec4a57ff909e76e$var$initialClientY","$bec4a57ff909e76e$var$previousBodyOverflowSetting","$bec4a57ff909e76e$var$previousBodyPosition","$bec4a57ff909e76e$var$previousBodyPaddingRight","$bec4a57ff909e76e$var$allowTouchMove","el","some","lock","options","allowTouchMove","$bec4a57ff909e76e$var$preventDefault","rawEvent","e","event","target","touches","length","preventDefault","$bec4a57ff909e76e$var$restoreOverflowSetting","undefined","document","body","style","paddingRight","overflow","$bec4a57ff909e76e$var$restorePositionSetting","y","parseInt","top","x","left","position","scrollTo","$bec4a57ff909e76e$export$24fdf68abf432c44","targetElement","lock1","concat","arr","Array","isArray","i","arr2","from","$bec4a57ff909e76e$var$_toConsumableArray","requestAnimationFrame","_window","scrollY","scrollX","innerHeight","setTimeout","bottomBarHeight","_reserveScrollBarGap","reserveScrollBarGap","scrollBarGap","innerWidth","documentElement","clientWidth","computedBodyPaddingRight","getComputedStyle","getPropertyValue","$bec4a57ff909e76e$var$setOverflowHidden","ontouchstart","targetTouches","clientY","ontouchmove","scrollTop","scrollHeight","clientHeight","$bec4a57ff909e76e$var$isTargetElementTotallyScrolled","stopPropagation","$bec4a57ff909e76e$var$handleScroll","console","error","$bec4a57ff909e76e$export$e5d0524c3725571e","filter","$910e0db584f0bbf3$var$targetElement","querySelector","isMenuOpen","getAttribute","setAttribute","classList","toggle","matchMedia","matches","remove","modalButtons","querySelectorAll","overlay","closeButtons","forEach","item","modalId","this","modalElem","add","modalIdClose","parentModal","code","scrollBtn","scrollWindow","$40f54f8831128093$var$scrollTop"],"version":3,"file":"index.ca9697d4.js.map"}